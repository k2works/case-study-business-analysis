# %% [markdown]
# # 令和4年度　事例Ⅳ
# %%
# %
import pandas as pd
from IPython.display import display
import os
import warnings
warnings.simplefilter('ignore', FutureWarning)
path = os.getcwd()
print(f"Current directory: {path}")
# %% [markdown]
# 第1問（配点25 点）
#
# （設問1 ）
#
# D社と同業他社の財務諸表を用いて経営分析を行い、同業他社と比較してD社が優れていると考えられる財務指標を2つ、D社の課題を示すと考えられる財務指標を1 つ取り上げ、それぞれについて、名称を(a)欄に、その値を(b)欄に記入せよ。なお、優れていると考えられる指標を①、②の欄に、課題を示すと考えられる指標を③の欄に記入し、(b)欄の値については、小数点第3 位を四捨五入し、単位をカッコ内に明記すること。また、解答においては生産性に関する指標を少なくとも1つ入れ、当該指標の計算においては「販売費及び一般管理費」の「その他」は含めない。
# %%
def 収益性指標を計算する(利益, 売上高):
    return 利益 / 売上高 * 100


def 収益性指標をデータフレームで表示(指標一覧, 会社名, 他社名):
    データ = []
    for 指標名, (利益, 売上高, 他社利益, 他社売上高) in 指標一覧.items():
        会社_率 = 収益性指標を計算する(利益, 売上高)
        他社_率 = 収益性指標を計算する(他社利益, 他社売上高)
        率差 = 会社_率 - 他社_率

        # 売上高販管費比率の差異にマイナスをかける
        if 指標名 == "売上高販管費比率":
            率差 = -率差

        データ.append([指標名, 会社_率, 他社_率, 率差])

    df = pd.DataFrame(データ, columns=['収益性', 会社名, 他社名, '差異'])
    return df


指標データ = {
    "売上高総利益率": (61652, 103465, 36595, 115138),
    "売上高営業利益率": (15002, 103465, 11327, 115138),
    "売上高経常利益率": (16510, 103465, 11401, 115138),
    "売上高販管費比率": (46650, 103465, 25268, 115138),
}

df_収益性 = 収益性指標をデータフレームで表示(指標データ, "D社", "他社")
print("全指標:\n", df_収益性)

df_D社優れ指標 = df_収益性[df_収益性["差異"] > 0]
print("\nD社の方が優れている指標:\n", df_D社優れ指標)

# %%

def 効率性指標を計算する(売上高, 資産):
    return 売上高 / 資産


def 効率性指標をデータフレームで表示(指標一覧, 会社名, 他社名):
    データ = []
    for 指標名, (売上高, 資産, 他社売上高, 他社資産) in 指標一覧.items():
        会社_率 = 効率性指標を計算する(売上高, 資産)
        他社_率 = 効率性指標を計算する(他社売上高, 他社資産)
        率差 = 会社_率 - 他社_率
        データ.append([指標名, 会社_率, 他社_率, 率差])

    df = pd.DataFrame(データ, columns=['効率性', 会社名, 他社名, '差異'])
    return df


指標データ = {
    "総資本回転率": (103465, 61041, 115138, 50700),
    "売上債権回転率": (103465, 4365, 115138, 5297),
    "棚卸資産回転率": (103465, 3097, 115138, 5215),
    "有形固定資産回転率": (103465, 16896, 115138, 8395),
}

df_効率性 = 効率性指標をデータフレームで表示(指標データ, "D社", "他社")
print("全指標:\n", df_効率性)

df_D社優れ指標 = df_効率性[df_効率性["差異"] > 0]
print("\nD社の方が優れている指標:\n", df_D社優れ指標)

# %%
def 安全性指標を計算する(分子, 分母):
    return 分子 / 分母 * 100


def 安全性指標をデータフレームで表示(指標一覧, 会社名, 他社名):
    データ = []
    for 指標名, (分子, 分母, 他社分子, 他社分母) in 指標一覧.items():
        会社_率 = 安全性指標を計算する(分子, 分母)
        他社_率 = 安全性指標を計算する(他社分子, 他社分母)
        率差 = 会社_率 - 他社_率
        if 指標名 in ["固定比率", "固定長期適合率", "負債比率"]:
            率差 = -率差  # ここで着目の指標に対して率差にマイナスをかける
        データ.append([指標名, 会社_率, 他社_率, 率差])
    df = pd.DataFrame(データ, columns=['安全性', 会社名, 他社名, '差異'])
    return df


指標データ = {
    "流動比率": (33441, 9067, 29701, 13209),
    "当座比率": (33441 - 3097 - 322, 9067, 29701 - 5215 - 977, 13209),
    "固定比率": (27600, 30467, 20999, 26206),
    "固定長期適合率": (27600, 30467 + 21506, 20999, 26206 + 11285),
    "負債比率": (30573, 30468, 24494, 26204),
    "自己資本比率": (30468, 61041, 26206, 50700),
}

df_安全性 = 安全性指標をデータフレームで表示(指標データ, "D社", "他社")
print("全指標:\n", df_安全性)
df_D社優れ指標 = df_安全性[df_安全性["差異"] > 0]
print("\nD社の方が優れている指標:\n", df_D社優れ指標)

# %%
def 生産性指標を計算する(分子, 分母):
    return 分子 / 分母


def 生産性指標をデータフレームで表示(指標一覧, 会社名, 他社名):
    データ = []
    for 指標名, (分子, 分母, 他社分子, 他社分母) in 指標一覧.items():
        会社_率 = 生産性指標を計算する(分子, 分母)
        他社_率 = 生産性指標を計算する(他社分子, 他社分母)
        率差 = 会社_率 - 他社_率
        if 指標名 == "労働分配率":
            会社_率 *= 100
            他社_率 *= 100
            率差 *= -100  # 率差にマイナスをかける
        データ.append([指標名, 会社_率, 他社_率, 率差])
    df = pd.DataFrame(データ, columns=['生産性', 会社名, 他社名, '差異'])
    return df


# 付加価値額 = 営業利益 + 給与総額 + 減価償却費 + 福利厚生費 + 動産・不動産賃貸料 + 租税公課
D社_付加価値額 = 15002 + 22307 + 2367 + 3114 + 679
他社_付加価値額 = 11327 + 10799 + 425 + 4428 + 559

指標データ = {
    "労働生産性": (D社_付加価値額, 53, 他社_付加価値額, 23),
    "労働装備率": (16896, 53, 8395, 23),
    "労働分配率": (22307, D社_付加価値額, 10799, 他社_付加価値額),
}

df_生産性 = 生産性指標をデータフレームで表示(指標データ, "D社", "他社")
print("全指標:\n", df_生産性)

df_D社優れ指標 = df_生産性[df_生産性["差異"] > 0]
print("\nD社の方が優れている指標:\n", df_D社優れ指標)# %% [markdown]
#
#（設問2 ）
#
# D社が同業他社と比べて明らかに劣っている点を指摘し、その要因について財務指標から読み取れる問題を80字以内で述べよ。

